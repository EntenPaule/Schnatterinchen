#[gcode_macro TEST_STATUS_ON_LCD_LED]
#gcode: 
#  _STATUS_ON_LCD_LED

######################### definition #########################
# cylce: cycle time of the loop (sec, int)
# hot_temp: temperature on which the the hotend is cosidered hot (degree celsius, float)
# verbose: enable/disable debug output (True/False, bool)
# other variables are for internal use only and should not be changed manually
##############################################################

[gcode_macro _STATUS_ON_LCD_LED]
variable_cycle: 5
variable_hot_temp: 50
variable_verbose: False #True False
variable_last_target: 0.0
variable_last_temp: 0.0
variable_send: False
variable_is_off: True

[delayed_gcode _STATUS_ON_LCD_LED_LOOP]
initial_duration: 1
gcode:
  UPDATE_DELAYED_GCODE ID=_STATUS_ON_LCD_LED_LOOP DURATION={printer["gcode_macro _STATUS_ON_LCD_LED"].cycle}
  _STATUS_ON_LCD_LED

[gcode_macro UPDATE_STATUS_ON_LCD_LED_LOOP]
description: Start/Stop a  update_led_loop 
variable_run: False
gcode:
  {% if params.ACTION and params.ACTION|lower == 'start' %}
    UPDATE_DELAYED_GCODE ID=_STATUS_ON_LCD_LED_LOOP DURATION=1
  {% elif params.ACTION and params.ACTION|lower == 'stop' %}
    SET_GCODE_VARIABLE MACRO=_STATUS_ON_LCD_LED VARIABLE=cycle VALUE=0
  {% else %}
    {action_respond_info("update_led_loop: No valid input parameter
                         Use: 
                         - update_led_loop ACTION=START
                         - update_led_loop ACTION=STOP")}
  {% endif %}

[gcode_macro _STATUS_ON_LCD_LED]
gcode:
    {% if printer.extruder.target != last_target %}
        {% set send = True %}
        SET_GCODE_VARIABLE MACRO=_STATUS_ON_LCD_LED VARIABLE=is_off VALUE=False
    {% elif printer.extruder.temperature != last_temp %}
        {% if printer.extruder.temperature > hot_temp %}
            {% set send = True %}
            SET_GCODE_VARIABLE MACRO=_STATUS_ON_LCD_LED VARIABLE=is_off VALUE=False
        {% elif is_off == False %}
            {% set send = True %}
            SET_GCODE_VARIABLE MACRO=_STATUS_ON_LCD_LED VARIABLE=is_off VALUE=True
        {% else %}            
            {% set send = False %}
        {% endif %}    
    {% else %}
        {% set send = False %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_STATUS_ON_LCD_LED VARIABLE=last_target VALUE={printer.extruder.target|float}
    SET_GCODE_VARIABLE MACRO=_STATUS_ON_LCD_LED VARIABLE=last_temp VALUE={printer.extruder.temperature|float}

    {% if send %} 
        {% if verbose %}
            {action_respond_info("send: %s
                                  target: %f
                                  last_target: %f
                                  temp: %f
                                  last_temp: %f
                                  is_off %s" % 
                                  (send,
                                  printer.extruder.target,
                                  printer["gcode_macro _STATUS_ON_LCD_LED"].last_target,
                                  printer.extruder.temperature,
                                  printer["gcode_macro _STATUS_ON_LCD_LED"].last_temp,
                                  printer["gcode_macro _STATUS_ON_LCD_LED"].is_off,
                                  ))}
        {% endif%}
        _STATUS_ON_LCD_LED_SEND
    {% endif %}

[gcode_macro _STATUS_ON_LCD_LED_SEND]
gcode:
        {% if printer.extruder.target == 0 %}

            {% if printer.extruder.temperature > printer["gcode_macro _STATUS_ON_LCD_LED"].hot_temp %}
                #{action_respond_info("send rot")}
                SET_LED LED=fysetc_mini12864 RED=0.8 GREEN=0 BLUE=0 INDEX=3 TRANSMIT=0
                SET_LED LED=fysetc_mini12864 RED=0.8 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
                SET_LED LED=fysetc_mini12864 RED=0.8 GREEN=0 BLUE=0 INDEX=1
                {% if printer["gcode_macro _STATUS_ON_LCD_LED"].verbose %}
                    {action_respond_info("send rot")}
                {% endif%}
            {% else %}
                #{action_respond_info("send gelb")}
                SET_LED LED=fysetc_mini12864 RED=1 GREEN=0.8 BLUE=0 INDEX=3 TRANSMIT=0
                SET_LED LED=fysetc_mini12864 RED=1 GREEN=0.8 BLUE=0 INDEX=2 TRANSMIT=0
                SET_LED LED=fysetc_mini12864 RED=1 GREEN=0.8 BLUE=0 INDEX=1
                {% if printer["gcode_macro _STATUS_ON_LCD_LED"].verbose %}
                    {action_respond_info("send gelb")}
                {% endif%}
            {% endif %}     

        {% else %}

            {% if printer.extruder.temperature >= printer.extruder.target - 4.0 %}
                #{action_respond_info("send target ok gelb")}
                SET_LED LED=fysetc_mini12864 RED=0.4 GREEN=0.4 BLUE=0 INDEX=3 TRANSMIT=0
                SET_LED LED=fysetc_mini12864 RED=0.4 GREEN=0.4 BLUE=0 INDEX=2 TRANSMIT=0
                SET_LED LED=fysetc_mini12864 RED=0.4 GREEN=0.4 BLUE=0 INDEX=1
                {% if printer["gcode_macro _STATUS_ON_LCD_LED"].verbose %}
                    {action_respond_info("send target ok gelb")}
                {% endif%}

            {% else %}
                #{% set scaler = printer.extruder.temperature|float / printer.extruder.target|float %}
                #{action_respond_info("send target way blue")}
                SET_LED LED=fysetc_mini12864 RED=0 GREEN=0.5 BLUE=0.8 INDEX=3 TRANSMIT=0
                SET_LED LED=fysetc_mini12864 RED=0 GREEN=0.5 BLUE=0.8 INDEX=2 TRANSMIT=0
                SET_LED LED=fysetc_mini12864 RED=0 GREEN=0.5 BLUE=0.8 INDEX=1
                {% if printer["gcode_macro _STATUS_ON_LCD_LED"].verbose %}
                    {action_respond_info("send target way blue")}
                {% endif%}
               # SET_LED LED=fysetc_mini12864 RED={ scaler|float * 1 } GREEN=0 BLUE=0 INDEX=3 TRANSMIT=0
               # SET_LED LED=fysetc_mini12864 RED={ scaler|float * 1 } GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
               # SET_LED LED=fysetc_mini12864 RED={ scaler|float * 1 } GREEN=0 BLUE=0 INDEX=1
            {% endif %}  
        {% endif %}

#  "someone helped me to write this and i have no clue how it's working. Have fun with it if it works, if not sorry i can't help you"
#  by Sennberg and glhf :django:
#                              https://tinyurl.com/y57qxknl























